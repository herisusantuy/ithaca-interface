.input input::-webkit-outer-spin-button,
.input input::-webkit-inner-spin-button {
  appearance: none;
}

.input {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: rem(6);
}

.container {
  @include spacing(padding, 8, 'top+bottom');
  @include spacing(padding, 10, 'left+right');
  display: flex;
  align-items: center;
  gap: rem(4);
  background: var(--gray-rgba-40);
  border-radius: rem(12);
  transition: $transition_all;
  position: relative;
  height: rem(34);
  width: rem(90);

  &:before {
    content: '';
    display: block;
    position: absolute;
    border-radius: rem(12);
    top: -(rem(0.5));
    bottom: -(rem(0.5));
    right: -(rem(0.5));
    left: -(rem(0.5));
    z-index: -1;
    border: rem(0.5) solid transparent;
    background: linear-gradient(0deg, #ffffff, rgba(255, 255, 255, 0) 80%) border-box;
    opacity: 0.2;
    -webkit-mask:
      linear-gradient(#fff 0 0) padding-box,
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: destination-out;
    mask-composite: exclude;
  }

  &:focus-within {
    border-color: var(--white);
  }

  input {
    flex: 1;
    background: none;
    outline: 0;
    border: 0;
    color: var(--white);
    width: 100%;
  }

  svg {
    height: rem(16);
    width: rem(16);
  }
}

.label,
.input input::placeholder {
  color: var(--white-60);
}

.label {
  font-family: $lato;
  @include font-size('text-xs', 'regular');
  cursor: pointer;
}

.error {
  .container {
    border: rem(1) solid var(--red-20);
  }
}

.errorMessage {
  display: flex;
  align-items: center;
  gap: rem(4);
  @include font-size('text-xxs', 'regular');
  color: var(--red-20);
}

.incrementButton {
  height: rem(15);
  button {
    height: rem(15) !important;
  }
}

.incrementWrapper {
  width: rem(10);
  margin-top: rem(-4);
}

.footer {
  font-size: rem(9);
  font-style: italic;
  color: var(--white-60);
}